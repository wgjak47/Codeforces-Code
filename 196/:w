#include<cstdio>
#include<cstring>
#include<cmath>
#include<iostream>
#include<vector>
#include<queue>
#include<algorithm>
#include<string>
#define pf(i,s,t) for (int (i)=s;(i)<(t);(i)++)
#define mf(i,s,t) for (int (i)=s;(i)>(t);(i)--)
#define mt(a,d) memset((a),(d),sizeof(a))
#define LLD long long
using namespace std;
int p[100010],node[100010],reg[100010];
vector<int> G[100010];
int dfs(int u,int fa,int deep)
{
	p[u]=deep;
	for (int i=0;i<G[u].size();i++)
	if (G[u][i]!=fa) 
	{
		int d=dfs(G[u][i],u,deep+1);
	}
}
main()
{
	int m,n,d;
	scanf("%d%d%d",&m,&n,&d);
	for (int i=0;i<n;i++)
		scanf("%d",&p[i]);
	for (int i=0;i<m-1;i++)
	{
		scanf("%d%d",&u,&v);
		G[v].push_back(u);
		G[u].push_back(v);
	}
	dfs(1,-1,deep);
	return 0;
}
